<?php

// 浮動小数点の演算
print floor((0.1 + 0.7) * 10) . PHP_EOL;
// 上記の場合、実行結果は「7」となり、期待される「0.8」とはならない
// 浮動小数点の計算では、想定通りの実行結果が得られない場合がある
// 浮動小数点が内部的には2進数で計算される
// 「0.1」は2進数では「0.000110011001100…」と無限循環小数となる
// (0.1 + 0.7) * 10 という計算も「7.9999999…」となり、切り捨てで「7」とされる

$add = bcadd(0.1, 0.7, 1);
$mul = bcmul($add, 10, 1);
print floor($mul) . PHP_EOL;
// 上記とすることで実行結果「0.8」が得られる
// 「bc'xxxxxx'」という任意精度数学関数を用いた命令で演算を行っている
// 引数は、「左オペランド」「右オペランド」「小数点以下の桁数」
// 上記の場合、「(0.1 + 0.7) * 10」を小数点以下1桁まで計算している
// 「bcadd」・・・加算
// 「bcsub」・・・減算
// 「bcmul」・・・乗算
// 「bcdiv」・・・除算
// 「bccomp」・・・比較

// 浮動小数点の比較
const EPSILON = 0.00001; // 小数点第何位までを保証するかを定数で定義
$x = 0.123456;
$y = 0.123455;
var_dump(abs($x - $y) < EPSILON); //　定数EPSILONで小数点桁数の精度で、absは絶対値を求める
